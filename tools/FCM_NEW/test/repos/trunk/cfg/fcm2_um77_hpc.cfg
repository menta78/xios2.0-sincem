step.class[preprocess-recon]          = preprocess
step.class[build-recon build-scripts] = build
steps = extract mirror

mirror.target = $HPC:$THIS_RUN_DIR_HPC
mirror.prop{config-file.steps} =  build-scripts preprocess build preprocess-recon build-recon

extract.ns = um
extract.location[um] = trunk@vn7.7
extract.path-root[um] = src
extract.path-excl[um] = configs scm utility
extract.path-incl[um] = utility/makebc utility/qxreconf

build-scripts.prop{no-dep.bin} = *
build-scripts.ns-excl = /
build-scripts.ns-incl = um/script
build-scripts.target = archfail autopp_tidyup getfile make_parexe.pl nextGenid \
    OASIS3_ctl OASIS3_conf qscasedisp qscicerun qscicesetup qscombine \
    qsexecute qsfinal qshistprint qshistreset qsmass qsmaster qsnemorun \
    qsnemosetup NEMO_nl_ctl qspickup qsresubmit qsserver qssetup restartinfo \
    submitchk UMScr_TopLevel qsmoose

$keys_model = C_LONG_INT=c_long_int C_LOW_U=c_low_u FRL8=frl8 \
    \ BUFRD_IO=bufrd_io VECTLIB=vectlib IBM=ibm C98_1A=c98_1a MO_GRIB=mo_grib \
    \ CONTROL=control ATMOS=atmos \
    \ GLOBAL=global A04_ALL=a04_all A01_3C=a01_3c A02_3C=a02_3c \
    \ A03_8C=a03_8c A04_3D=a04_3d A05_4A=a05_4a A06_4A=a06_4a A08_7A=a08_7a \
    \ A09_2A=a09_2a A10_2A=a10_2a A11_0A=a11_0a A12_2A=a12_2a A13_2A=a13_2a \
    \ A14_0A=a14_0a A15_1A=a15_1a A16_1A=a16_1a A17_0A=a17_0a A18_2A=a18_2a \
    \ A19_1A=a19_1a A25_0A=a25_0a A26_0A=a26_0a A30_1A=a30_1a A31_0A=a31_0a \
    \ A32_1A=a32_1a A33_0A=a33_0a A34_0A=a34_0a A35_0A=a35_0a A36_0A=a36_0a \
    \ A37_0A=a37_0a A38_0A=a38_0a A39_0A=a39_0a A70_1C=a70_1c A71_1A=a71_1a \
    \ C70_1A=c70_1a C72_0A=c72_0a C80_1A=c80_1a \
    \ C82_1A=c82_1a C84_1A=c84_1a C92_2A=c92_2a C94_1A=c94_1a C95_2A=c95_2a \
    \ C96_1C=c96_1c C97_3A=c97_3a
preprocess.prop{fpp.defs} = $keys_model
preprocess.prop{cpp.defs} = $keys_model
preprocess.prop{fpp} = cpp
preprocess.prop{cpp} = xlc
preprocess.prop{cpp.flags} = -E -C
preprocess.prop{fpp.flags} = -E -P -traditional
preprocess.ns-excl = um/script um/utility/qxreconf

build.target  = um.exe
build.target-rename  = flumeMain.exe:um.exe
build.prop{cc} = xlc_r
build.prop{fc} = mpxlf90_r
$flags_base_model = -qrealsize=8 -qintsize=8 -qextname -qsuffix=f=f90 \
    \ -qarch=pwr6 -qtune=pwr6 -qxflag=p6div -NS32768 -g -O0 \
    \ -qstrict -I/projects/um1/gcom/gcom3.6/meto_ibm_pwr6_mpp/inc \
    \ -I/projects/um1/lib/netcdf3.20090102/include
build.prop{fc.flags} = $flags_base_model 
build.prop{fc.flags}[um/io_services] = $flags_base_model -qsmp=omp
build.prop{fc.flags-ld} = -lmass -lmassvp6 -qsmp=omp \
    \ -L/projects/um1/gcom/gcom3.6/meto_ibm_pwr6_mpp/lib -lgcom \
    \ -L/projects/um1/lib/netcdf3.20090102/lib64 -lnetcdf \
    \ -L/projects/um1/lib -lsig -lgrib
build.prop{dep.o.special} = blkdata.o
build.prop{ns-dep.o} = um/control/c_code
build.prop{dep.o}[um/control/c_code] = print_from_c.o
build.prop{no-dep.f.module} = mpl
build.ns-excl = um/script um/utility/qxreconf

$keys_recon = C_LONG_INT=c_long_int C_LOW_U=c_low_u FRL8=frl8 \
    \ BUFRD_IO=bufrd_io VECTLIB=vectlib IBM=ibm C98_1A=c98_1a MO_GRIB=mo_grib \
    \ RECON=recon
preprocess-recon.prop{no-step-source} = preprocess
preprocess-recon.prop{fpp.defs} = $keys_recon
preprocess-recon.prop{cpp.defs} = $keys_recon
preprocess-recon.prop{fpp} = cpp
preprocess-recon.prop{cpp} = xlc
preprocess-recon.prop{cpp.flags} = -E -C
preprocess-recon.prop{fpp.flags} = -E -P -traditional
preprocess-recon.ns-excl = um/script um/utility/makebc

build-recon.prop{no-step-source} = preprocess
build-recon.target        = qxreconf
build-recon.target-rename = reconfigure.exe:qxreconf
build-recon.prop{cc} = xlc_r
build-recon.prop{fc} = mpxlf90_r
build-recon.prop{fc.flags} = $flags_base_model 
build-recon.prop{fc.flags-ld} = -lmass -lmassvp6 -qsmp=omp \
    \ -L/projects/um1/gcom/gcom3.6/meto_ibm_pwr6_mpp/lib -lgcom \
    \ -L/projects/um1/lib/netcdf3.20090102/lib64 -lnetcdf \
    \ -L/projects/um1/lib -lsig -lgrib
build-recon.prop{ns-dep.o} = um/control/c_code
build-recon.prop{dep.o}[um/control/c_code] = print_from_c.o
build-recon.prop{no-dep.f.module} = mpl
build-recon.ns-excl = um/script um/utility/makebc
